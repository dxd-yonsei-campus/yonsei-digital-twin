---
import '@/styles/global.css';

interface Props {
  title?: string;
  description?: string;
}

import { getLangFromUrl, useTranslations } from '@/i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const { title, description = t('site.description') } = Astro.props;

const formattedTitle = title
  ? `${t('site.title')} | ${title}`
  : t('site.title');

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<html lang={lang}>
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:type" content="website" />
    <meta property="og:title" content={formattedTitle} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content="/og-image.png" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta name="twitter:title" content={formattedTitle} />
    <meta name="twitter:description" content={description} />
    <meta property="twitter:image" content="/og-image.png" />
    <title>{formattedTitle}</title>
  </head>
  <body>
    <slot />
  </body>
  <script>
    import { theme } from '@/store';

    const initTheme = (() => {
      const localStorageTheme = localStorage?.getItem('theme') ?? '';
      if (['dark', 'light'].includes(localStorageTheme)) {
        return localStorageTheme as 'dark' | 'light';
      }
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return 'dark';
      }
      return 'light';
    })();

    if (initTheme === 'dark') {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }

    theme.set(initTheme);

    theme.listen((newTheme) => {
      if (newTheme === 'dark') {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
    });
  </script>
</html>
