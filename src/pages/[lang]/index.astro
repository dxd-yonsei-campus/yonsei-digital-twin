---
import Layout from '@/layouts/Layout.astro';
import HeroVideo from '@/components/landing/HeroVideo';
import LanguagePicker from '@/components/landing/LanguagePicker';
import MapLink from '@/components/landing/MapLink';
import { campuses } from '@/types/map';

export function getStaticPaths() {
  return [{ params: { lang: 'en' } }, { params: { lang: 'ko' } }];
}

import { getLangFromUrl, useTranslations } from '@/i18n/utils';
import { ChevronDown, Languages } from 'lucide-react';
import { languages } from '@/i18n/ui';
import ThemePicker from '@/components/ThemePicker';
import Footer from '@/components/Footer.astro';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<Layout>
  <div
    class="absolute top-8 right-4 flex items-center text-muted-foreground lg:right-6"
  >
    <LanguagePicker client:load lang={lang} align="end">
      <>
        <Languages className="size-4.5" />
        {languages[lang]}
        <ChevronDown className="size-3.5" />
      </>
    </LanguagePicker>
    <ThemePicker client:load />
  </div>
  <main
    class="mx-auto flex h-svh max-w-6xl flex-col items-center justify-center gap-8 px-4 lg:flex-row lg:justify-between"
  >
    <div
      class="min-w-none w-full text-center md:w-auto md:min-w-md lg:text-left"
    >
      <h1 class="text-4xl font-bold">{t('site.title')}</h1>
      <p class="mt-0.5 text-lg text-muted-foreground">
        {t('home.description')}
      </p>
      <div
        class="mt-4 flex flex-col items-center justify-center gap-1.5 sm:flex-row lg:justify-start"
      >
        {
          campuses.map((campus) => {
            return <MapLink client:load campus={campus} lang={lang} />;
          })
        }
      </div>
    </div>
    <HeroVideo client:load />
  </main>
  <Footer />
</Layout>
